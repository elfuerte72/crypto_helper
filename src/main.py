#!/usr/bin/env python3
"""
Crypto Helper Telegram Bot - MVP
–û—Å–Ω–æ–≤–Ω–æ–π —Ñ–∞–π–ª –±–æ—Ç–∞ —Å –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–µ–π –≤—Å–µ—Ö –º–æ–¥—É–ª–µ–π
"""

import asyncio
import logging
import sys
import os

# Add src directory to path for imports
sys.path.insert(0, os.path.dirname(__file__))

from aiogram import Bot, Dispatcher
from aiogram.types import Message
from aiogram.filters import Command
from aiogram.fsm.storage.memory import MemoryStorage

# Import configuration and handlers
from config import config
from utils.logger import get_bot_logger
from handlers.admin_handlers import admin_router
from handlers.margin_calculation import margin_router

# Initialize logger
logger = get_bot_logger()

# Initialize bot and dispatcher with FSM storage
bot = Bot(token=config.BOT_TOKEN)
storage = MemoryStorage()
dp = Dispatcher(storage=storage)


# Include routers
dp.include_router(admin_router)
dp.include_router(margin_router)


@dp.message(Command('start'))
async def start_handler(message: Message):
    """Handle /start command - Welcome message"""
    await message.reply(
        "üöÄ <b>Crypto Helper Bot</b>\n\n"
        "–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –±–æ—Ç –¥–ª—è —Ä–∞—Å—á–µ—Ç–∞ –∫—É—Ä—Å–æ–≤ –∫—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç!\n\n"
        "üìä <b>–î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:</b>\n"
        "‚Ä¢ /admin_bot - –ü–∞–Ω–µ–ª—å —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è (—Ç–æ–ª—å–∫–æ –¥–ª—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤)\n"
        "‚Ä¢ /start - –ü–æ–∫–∞–∑–∞—Ç—å —ç—Ç–æ —Å–æ–æ–±—â–µ–Ω–∏–µ\n"
        "‚Ä¢ /help - –°–ø—Ä–∞–≤–∫–∞ –ø–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é\n\n"
        "üí° <i>–î–ª—è –¥–æ—Å—Ç—É–ø–∞ –∫ —Ñ—É–Ω–∫—Ü–∏—è–º –±–æ—Ç–∞ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–º–∞–Ω–¥—É /admin_bot</i>",
        parse_mode='HTML'
    )


@dp.message(Command('help'))
async def help_handler(message: Message):
    """Handle /help command - Help information"""
    await message.reply(
        "üìñ <b>–°–ø—Ä–∞–≤–∫–∞ –ø–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é</b>\n\n"
        "üîß <b>–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–∏–≤–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏:</b>\n"
        "‚Ä¢ /admin_bot - –î–æ—Å—Ç—É–ø –∫ –ø–∞–Ω–µ–ª–∏ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è\n"
        "  (—Ç–æ–ª—å–∫–æ –¥–ª—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤ –∫–∞–Ω–∞–ª–∞)\n\n"
        "üí± <b>–§—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç—å:</b>\n"
        "‚Ä¢ –í—ã–±–æ—Ä –≤–∞–ª—é—Ç–Ω—ã—Ö –ø–∞—Ä (RUB, USDT, –∫—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç—ã)\n"
        "‚Ä¢ –ü–æ–ª—É—á–µ–Ω–∏–µ –∞–∫—Ç—É–∞–ª—å–Ω—ã—Ö –∫—É—Ä—Å–æ–≤ —á–µ—Ä–µ–∑ Rapira API\n"
        "‚Ä¢ –†–∞—Å—á–µ—Ç –∫—É—Ä—Å–∞ —Å –ø—Ä–æ—Ü–µ–Ω—Ç–Ω–æ–π –Ω–∞—Ü–µ–Ω–∫–æ–π\n"
        "‚Ä¢ –§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ –¥–ª—è –ø—É–±–ª–∏–∫–∞—Ü–∏–∏\n\n"
        "üåê <b>–ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ–º—ã–µ –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏—è:</b>\n"
        "‚Ä¢ RUB ‚Üî ZAR, THB, AED, IDR\n"
        "‚Ä¢ USDT ‚Üî ZAR, THB, AED, IDR\n"
        "‚Ä¢ –û—Å–Ω–æ–≤–Ω—ã–µ –∫—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç–Ω—ã–µ –ø–∞—Ä—ã\n\n"
        "‚öôÔ∏è <b>–¢–µ—Ö–Ω–∏—á–µ—Å–∫–∏–µ –¥–µ—Ç–∞–ª–∏:</b>\n"
        "‚Ä¢ –ö—É—Ä—Å—ã –æ–±–Ω–æ–≤–ª—è—é—Ç—Å—è –≤ —Ä–µ–∞–ª—å–Ω–æ–º –≤—Ä–µ–º–µ–Ω–∏\n"
        "‚Ä¢ –ü–æ–¥–¥–µ—Ä–∂–∫–∞ –ø–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω—ã—Ö –∏ –æ—Ç—Ä–∏—Ü–∞—Ç–µ–ª—å–Ω—ã—Ö –Ω–∞—Ü–µ–Ω–æ–∫\n"
        "‚Ä¢ –¢–æ—á–Ω—ã–µ —Ä–∞—Å—á–µ—Ç—ã —Å –æ–∫—Ä—É–≥–ª–µ–Ω–∏–µ–º –¥–æ 8 –∑–Ω–∞–∫–æ–≤\n\n"
        "‚ùì –ï—Å–ª–∏ —É –≤–∞—Å –µ—Å—Ç—å –≤–æ–ø—Ä–æ—Å—ã, –æ–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∫ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É.",
        parse_mode='HTML'
    )


async def main():
    """Main function to start the bot"""
    logger.info("üöÄ –ó–∞–ø—É—Å–∫ Crypto Helper Bot...")
    logger.info(f"üìä –†–µ–∂–∏–º –æ—Ç–ª–∞–¥–∫–∏: {config.DEBUG_MODE}")
    logger.info(f"üîó Rapira API URL: {config.RAPIRA_API_URL}")
    logger.info(f"üìã –ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ–º—ã—Ö –ø–∞—Ä: {len(config.SUPPORTED_PAIRS)}")
    
    try:
        # Start polling
        logger.info("üîÑ –ù–∞—á–∞–ª–æ polling...")
        await dp.start_polling(bot)
    except Exception as e:
        logger.error(f"‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø—É—Å–∫–∞ –±–æ—Ç–∞: {e}")
        raise
    finally:
        await bot.session.close()
        logger.info("üõë –ë–æ—Ç –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω")


if __name__ == '__main__':
    print("ü§ñ Crypto Helper Bot - Technology Validation")
    print("=" * 50)
    print("Testing Aiogram 3.x integration...")
    
    try:
        asyncio.run(main())
    except KeyboardInterrupt:
        print("\nüëã Bot stopped by user")
    except Exception as e:
        print(f"‚ùå Error: {e}")