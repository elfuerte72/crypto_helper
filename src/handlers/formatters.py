#!/usr/bin/env python3
"""
–ú–æ–¥—É–ª—å —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏—è —Å–æ–æ–±—â–µ–Ω–∏–π –¥–ª—è Crypto Helper Bot
–°–æ–¥–µ—Ä–∂–∏—Ç —Ñ—É–Ω–∫—Ü–∏–∏ –¥–ª—è —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏—è —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ –∏ —à–∞–±–ª–æ–Ω—ã —Å–æ–æ–±—â–µ–Ω–∏–π
"""

from decimal import Decimal
from typing import Dict, Any
from .calculation_logic import CalculationResult, MarginCalculator


class MessageFormatter:
    """–ö–ª–∞—Å—Å –¥–ª—è —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏—è —Å–æ–æ–±—â–µ–Ω–∏–π –±–æ—Ç–∞"""
    
    @staticmethod
    def format_calculation_result(result: CalculationResult) -> str:
        """
        –§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞ —Ä–∞—Å—á–µ—Ç–∞ –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è
        
        Args:
            result: –†–µ–∑—É–ª—å—Ç–∞—Ç —Ä–∞—Å—á–µ—Ç–∞
            
        Returns:
            str: –û—Ç—Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–Ω—ã–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç
        """
        # –û–ø—Ä–µ–¥–µ–ª—è–µ–º –≤–∞–ª—é—Ç—ã
        base_currency = result.pair_info['base']
        quote_currency = result.pair_info['quote']
        
        # –§–æ—Ä–º–∞—Ç–∏—Ä—É–µ–º –∑–Ω–∞—á–µ–Ω–∏—è
        base_rate_str = MarginCalculator.format_currency_value(result.base_rate, quote_currency)
        final_rate_str = MarginCalculator.format_currency_value(result.final_rate, quote_currency)
        rate_change_str = MarginCalculator.format_currency_value(abs(result.rate_change), quote_currency)
        amount_display = MarginCalculator.format_amount_display(result.amount, base_currency)
        
        # –§–æ—Ä–º–∞—Ç–∏—Ä—É–µ–º —Å—É–º–º—ã
        amount_base_str = MarginCalculator.format_currency_value(result.amount_base_rate, quote_currency)
        amount_final_str = MarginCalculator.format_currency_value(result.amount_final_rate, quote_currency)
        amount_diff_str = MarginCalculator.format_currency_value(abs(result.amount_difference), quote_currency)
        
        # –û–ø—Ä–µ–¥–µ–ª—è–µ–º –∑–Ω–∞–∫–∏ –∏–∑–º–µ–Ω–µ–Ω–∏—è
        change_sign = "+" if result.rate_change >= 0 else "-"
        amount_change_sign = "+" if result.amount_difference >= 0 else "-"
        change_emoji = "üìà" if result.rate_change >= 0 else "üìâ"
        
        # –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Ü–≤–µ—Ç –¥–ª—è –Ω–∞—Ü–µ–Ω–∫–∏
        margin_emoji = "üìà" if result.margin >= 0 else "üìâ"
        margin_sign = "+" if result.margin >= 0 else ""
        
        # –í—Ä–µ–º–µ–Ω–Ω–∞—è –º–µ—Ç–∫–∞
        timestamp = result.exchange_rate_data.get('timestamp', '')[:19].replace('T', ' ')
        
        message = (
            f"‚úÖ <b>–†–∞—Å—á–µ—Ç –∫—É—Ä—Å–∞ –∑–∞–≤–µ—Ä—à–µ–Ω</b>\n\n"
            f"{result.pair_info['emoji']} <b>{result.pair_info['name']}</b>\n"
            f"üìù <i>{result.pair_info['description']}</i>\n\n"
            
            f"üí∞ <b>–°—É–º–º–∞ —Ä–∞—Å—á–µ—Ç–∞:</b> <code>{amount_display}</code> {base_currency}\n"
            f"üíπ <b>–ë–∞–∑–æ–≤—ã–π –∫—É—Ä—Å:</b> <code>{base_rate_str}</code> {quote_currency}\n"
            f"{margin_emoji} <b>–ù–∞—Ü–µ–Ω–∫–∞:</b> <code>{margin_sign}{result.margin}%</code>\n"
            f"üíé <b>–ò—Ç–æ–≥–æ–≤—ã–π –∫—É—Ä—Å:</b> <code>{final_rate_str}</code> {quote_currency}\n\n"
            
            f"üìä <b>–†–∞—Å—á–µ—Ç —Å—É–º–º:</b>\n"
            f"‚Ä¢ –ü–æ –±–∞–∑–æ–≤–æ–º—É –∫—É—Ä—Å—É: <code>{amount_base_str}</code> {quote_currency}\n"
            f"‚Ä¢ –ü–æ –∏—Ç–æ–≥–æ–≤–æ–º—É –∫—É—Ä—Å—É: <code>{amount_final_str}</code> {quote_currency}\n"
            f"{change_emoji} ‚Ä¢ –†–∞–∑–Ω–∏—Ü–∞: <code>{amount_change_sign}{amount_diff_str}</code> {quote_currency}\n\n"
            
            f"üî¢ <b>–î–µ—Ç–∞–ª–∏ —Ä–∞—Å—á–µ—Ç–∞:</b>\n"
            f"‚Ä¢ –ö—É—Ä—Å: {base_rate_str} {quote_currency} –∑–∞ 1 {base_currency}\n"
            f"‚Ä¢ –ù–∞—Ü–µ–Ω–∫–∞: {margin_sign}{result.margin}% (–º–Ω–æ–∂–∏—Ç–µ–ª—å: {1 + result.margin/100:.6f})\n"
            f"‚Ä¢ –ò—Ç–æ–≥–æ–≤—ã–π –∫—É—Ä—Å: {base_rate_str} √ó {1 + result.margin/100:.6f} = {final_rate_str}\n"
            f"‚Ä¢ –†–∞—Å—á–µ—Ç: {amount_display} √ó {final_rate_str} = {amount_final_str}\n\n"
            
            f"üïê <b>–í—Ä–µ–º—è –ø–æ–ª—É—á–µ–Ω–∏—è –∫—É—Ä—Å–∞:</b> {timestamp}\n"
            f"üì° <b>–ò—Å—Ç–æ—á–Ω–∏–∫:</b> {result.exchange_rate_data.get('source', 'N/A')}"
        )
        
        return message
    
    @staticmethod
    def format_amount_request(pair_info: Dict[str, Any]) -> str:
        """
        –§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–ø—Ä–æ—Å–∞ —Å—É–º–º—ã –¥–ª—è —Ä–∞—Å—á–µ—Ç–∞
        
        Args:
            pair_info: –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –≤–∞–ª—é—Ç–Ω–æ–π –ø–∞—Ä–µ
            
        Returns:
            str: –û—Ç—Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
        """
        return (
            f"üí± <b>–†–∞—Å—á–µ—Ç –∫—É—Ä—Å–∞ —Å –Ω–∞—Ü–µ–Ω–∫–æ–π</b>\n\n"
            f"{pair_info['emoji']} <b>{pair_info['name']}</b>\n"
            f"üìù <i>{pair_info['description']}</i>\n\n"
            f"üí∞ <b>–í–≤–µ–¥–∏—Ç–µ —Å—É–º–º—É –≤ {pair_info['base']}:</b>\n\n"
            f"–ü—Ä–∏–º–µ—Ä: 1000 –∏–ª–∏ 500.50"
        )
    
    @staticmethod
    def format_margin_request(
        pair_info: Dict[str, Any], 
        amount: Decimal, 
        exchange_rate_data: Dict[str, Any]
    ) -> str:
        """
        –§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–ø—Ä–æ—Å–∞ –Ω–∞—Ü–µ–Ω–∫–∏
        
        Args:
            pair_info: –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –≤–∞–ª—é—Ç–Ω–æ–π –ø–∞—Ä–µ
            amount: –°—É–º–º–∞ –¥–ª—è —Ä–∞—Å—á–µ—Ç–∞
            exchange_rate_data: –î–∞–Ω–Ω—ã–µ –æ –∫—É—Ä—Å–µ
            
        Returns:
            str: –û—Ç—Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
        """
        amount_display = MarginCalculator.format_amount_display(amount, pair_info['base'])
        rate = float(exchange_rate_data['rate'])
        timestamp = exchange_rate_data.get('timestamp', '')[:19].replace('T', ' ')
        
        return (
            f"üí± <b>–†–∞—Å—á–µ—Ç –∫—É—Ä—Å–∞ —Å –Ω–∞—Ü–µ–Ω–∫–æ–π</b>\n\n"
            f"{pair_info['emoji']} <b>{pair_info['name']}</b>\n"
            f"üìù <i>{pair_info['description']}</i>\n\n"
            f"üí∞ <b>–°—É–º–º–∞:</b> <code>{amount_display}</code> {pair_info['base']}\n"
            f"üíπ <b>–¢–µ–∫—É—â–∏–π –∫—É—Ä—Å:</b> <code>{rate:.8f}</code> {pair_info['quote']}\n\n"
            f"üìà <b>–í–≤–µ–¥–∏—Ç–µ –Ω–∞—Ü–µ–Ω–∫—É –≤ %:</b>\n\n"
            f"–ü—Ä–∏–º–µ—Ä: 5 –∏–ª–∏ -1.2"
        )
    
    @staticmethod
    def format_error_message(error_type: str, error_details: str = "") -> str:
        """
        –§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏—è –æ–± –æ—à–∏–±–∫–µ
        
        Args:
            error_type: –¢–∏–ø –æ—à–∏–±–∫–∏
            error_details: –î–µ—Ç–∞–ª–∏ –æ—à–∏–±–∫–∏
            
        Returns:
            str: –û—Ç—Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± –æ—à–∏–±–∫–µ
        """
        error_messages = {
            'api_error': (
                f"‚ùå <b>–û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –∫—É—Ä—Å–∞</b>\n\n"
                f"–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å —Ç–µ–∫—É—â–∏–π –∫—É—Ä—Å –≤–∞–ª—é—Ç–Ω–æ–π –ø–∞—Ä—ã:\n"
                f"<code>{error_details}</code>\n\n"
                f"üîÑ –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ –∏–ª–∏ –æ–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∫ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É.\n\n"
                f"üè† –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ /admin_bot –¥–ª—è –≤–æ–∑–≤—Ä–∞—Ç–∞ –∫ –≥–ª–∞–≤–Ω–æ–º—É –º–µ–Ω—é."
            ),
            'validation_amount': (
                f"‚ùå <b>–û—à–∏–±–∫–∞ –≤–≤–æ–¥–∞ —Å—É–º–º—ã</b>\n\n"
                f"{error_details}\n\n"
                f"–ü—Ä–∏–º–µ—Ä: 1000 –∏–ª–∏ 500.50"
            ),
            'validation_margin': (
                f"‚ùå <b>–û—à–∏–±–∫–∞ –≤–≤–æ–¥–∞ –Ω–∞—Ü–µ–Ω–∫–∏</b>\n\n"
                f"{error_details}\n\n"
                f"–ü—Ä–∏–º–µ—Ä: 5 –∏–ª–∏ -1.2"
            ),
            'generic': (
                f"‚ùå <b>–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞</b>\n\n"
                f"{error_details or '–ù–µ —É–¥–∞–ª–æ—Å—å –≤—ã–ø–æ–ª–Ω–∏—Ç—å –æ–ø–µ—Ä–∞—Ü–∏—é.'}\n"
                f"–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.\n\n"
                f"üè† –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ /admin_bot –¥–ª—è –≤–æ–∑–≤—Ä–∞—Ç–∞ –∫ –≥–ª–∞–≤–Ω–æ–º—É –º–µ–Ω—é."
            ),
            'invalid_content': (
                f"‚ùå <b>–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –≤–≤–æ–¥</b>\n\n"
                f"–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ {error_details} –≤ –≤–∏–¥–µ —á–∏—Å–ª–∞."
            )
        }
        
        return error_messages.get(error_type, error_messages['generic'])
    
    @staticmethod
    def format_welcome_message() -> str:
        """
        –§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è
        
        Returns:
            str: –û—Ç—Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–Ω–æ–µ –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
        """
        return (
            "üîß <b>–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–∏–≤–Ω–∞—è –ø–∞–Ω–µ–ª—å</b>\n\n"
            "–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –ø–∞–Ω–µ–ª—å —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è Crypto Helper Bot!\n\n"
            "üìä <b>–í—ã–±–µ—Ä–∏—Ç–µ –≤–∞–ª—é—Ç–Ω—É—é –ø–∞—Ä—É –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –∫—É—Ä—Å–∞:</b>\n\n"
            "‚Ä¢ –í—ã–±–µ—Ä–∏—Ç–µ –Ω—É–∂–Ω—É—é –≤–∞–ª—é—Ç–Ω—É—é –ø–∞—Ä—É –∏–∑ —Å–ø–∏—Å–∫–∞ –Ω–∏–∂–µ\n"
            "‚Ä¢ –£–∫–∞–∂–∏—Ç–µ —Å—É–º–º—É –¥–ª—è —Ä–∞—Å—á–µ—Ç–∞\n"
            "‚Ä¢ –£–∫–∞–∂–∏—Ç–µ –ø—Ä–æ—Ü–µ–Ω—Ç–Ω—É—é –Ω–∞—Ü–µ–Ω–∫—É\n"
            "‚Ä¢ –ü–æ–ª—É—á–∏—Ç–µ –∞–∫—Ç—É–∞–ª—å–Ω—ã–π –∫—É—Ä—Å —Å –Ω–∞—Ü–µ–Ω–∫–æ–π\n\n"
            "üí° <i>–ö—É—Ä—Å—ã –æ–±–Ω–æ–≤–ª—è—é—Ç—Å—è –≤ —Ä–µ–∞–ª—å–Ω–æ–º –≤—Ä–µ–º–µ–Ω–∏ —á–µ—Ä–µ–∑ Rapira API</i>"
        )
    
    @staticmethod
    def format_cancel_message(operation: str) -> str:
        """
        –§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏—è –æ–± –æ—Ç–º–µ–Ω–µ –æ–ø–µ—Ä–∞—Ü–∏–∏
        
        Args:
            operation: –ù–∞–∑–≤–∞–Ω–∏–µ –æ–ø–µ—Ä–∞—Ü–∏–∏
            
        Returns:
            str: –û—Ç—Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
        """
        return (
            f"‚ùå <b>{operation} –æ—Ç–º–µ–Ω–µ–Ω–∞</b>\n\n"
            f"–û–ø–µ—Ä–∞—Ü–∏—è –±—ã–ª–∞ –æ—Ç–º–µ–Ω–µ–Ω–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º.\n\n"
            f"üè† –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ /admin_bot –¥–ª—è –≤–æ–∑–≤—Ä–∞—Ç–∞ –∫ –≥–ª–∞–≤–Ω–æ–º—É –º–µ–Ω—é."
        )