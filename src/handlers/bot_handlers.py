#!/usr/bin/env python3
"""
–ú–æ–¥—É–ª—å –æ—Å–Ω–æ–≤–Ω—ã—Ö –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤ –¥–ª—è Crypto Helper Bot (–ó–ê–ì–õ–£–®–ö–ê)
–í—Ä–µ–º–µ–Ω–Ω–∞—è –∑–∞–≥–ª—É—à–∫–∞ –¥–æ —Ä–µ–∞–ª–∏–∑–∞—Ü–∏–∏ –Ω–æ–≤–æ–π –ª–æ–≥–∏–∫–∏ –≤ –§–∞–∑–µ 1
"""

from aiogram import Router
from aiogram.types import CallbackQuery
from aiogram.fsm.context import FSMContext

# –ù–æ–≤—ã–µ –∏–º–ø–æ—Ä—Ç—ã –¥–ª—è –Ω–æ–≤–æ–π –ª–æ–≥–∏–∫–∏
from .fsm_states import ExchangeFlow
from .formatters import MessageFormatter

try:
    from ..utils.logger import get_bot_logger
except ImportError:
    import sys
    import os
    sys.path.insert(0, os.path.dirname(os.path.dirname(__file__)))
    from utils.logger import get_bot_logger

# Initialize logger
logger = get_bot_logger()

# Create router for margin calculation handlers
margin_router = Router()


async def start_margin_calculation(
    callback_query: CallbackQuery, 
    pair_callback: str, 
    state: FSMContext
):
    """
    –ó–ê–ì–õ–£–®–ö–ê: –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –Ω–∞—á–∞–ª–∞ —Ä–∞—Å—á–µ—Ç–∞ –Ω–∞—Ü–µ–Ω–∫–∏
    –ë—É–¥–µ—Ç —Ä–µ–∞–ª–∏–∑–æ–≤–∞–Ω –≤ –§–∞–∑–µ 1
    """
    user_id = callback_query.from_user.id
    
    logger.info(f"–ó–∞–ø—Ä–æ—Å —Ä–∞—Å—á–µ—Ç–∞: user_id={user_id}, pair={pair_callback}")
    
    # –í—Ä–µ–º–µ–Ω–Ω–∞—è –∑–∞–≥–ª—É—à–∫–∞
    await callback_query.answer("üöß –§—É–Ω–∫—Ü–∏—è –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ")
    
    message_text = (
        "üöß <b>–ù–æ–≤–∞—è –ª–æ–≥–∏–∫–∞ –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ</b>\n\n"
        "–ü–æ—à–∞–≥–æ–≤—ã–π —Ñ–ª–æ—É –æ–±–º–µ–Ω–∞ –±—É–¥–µ—Ç —Ä–µ–∞–ª–∏–∑–æ–≤–∞–Ω –≤ –§–∞–∑–µ 1.\n"
        "–ü–æ–∫–∞ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –∑–∞–≥–ª—É—à–∫–∞."
    )
    
    await callback_query.message.edit_text(
        message_text,
        parse_mode='HTML'
    )
    
    # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –Ω–∞—á–∞–ª—å–Ω–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ
    await state.set_state(ExchangeFlow.WAITING_FOR_SOURCE_CURRENCY)