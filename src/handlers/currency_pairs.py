#!/usr/bin/env python3
"""
–ú–æ–¥—É–ª—å –≤–∞–ª—é—Ç–Ω—ã—Ö –ø–∞—Ä –∏ –∫–æ–Ω—Å—Ç–∞–Ω—Ç –¥–ª—è Crypto Helper Bot
–°–æ–¥–µ—Ä–∂–∏—Ç –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è –≤–∞–ª—é—Ç–Ω—ã—Ö –ø–∞—Ä –∏ —Ñ—É–Ω–∫—Ü–∏–∏ –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å –Ω–∏–º–∏
"""

from typing import Dict, Any, Optional

# –ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã –≤–∞–ª—é—Ç–Ω—ã—Ö –ø–∞—Ä (—É–ø—Ä–æ—â–µ–Ω–Ω—ã–µ - —Ç–æ–ª—å–∫–æ USDT –ø–∞—Ä—ã)
CURRENCY_PAIRS = {
    # USDT –ø–∞—Ä—ã
    'usdt_zar': {
        'name': 'USDT/ZAR',
        'base': 'USDT',
        'quote': 'ZAR',
        'emoji': 'üáøüá¶',
        'description': 'Tether –∫ –Æ–∂–Ω–æ–∞—Ñ—Ä–∏–∫–∞–Ω—Å–∫–æ–º—É —Ä—ç–Ω–¥—É'
    },
    'usdt_thb': {
        'name': 'USDT/THB',
        'base': 'USDT',
        'quote': 'THB',
        'emoji': 'üáπüá≠',
        'description': 'Tether –∫ –¢–∞–π—Å–∫–æ–º—É –±–∞—Ç—É'
    },
    'usdt_aed': {
        'name': 'USDT/AED',
        'base': 'USDT',
        'quote': 'AED',
        'emoji': 'üá¶üá™',
        'description': 'Tether –∫ –î–∏—Ä—Ö–∞–º—É –û–ê–≠'
    },
    'usdt_idr': {
        'name': 'USDT/IDR',
        'base': 'USDT',
        'quote': 'IDR',
        'emoji': 'üáÆüá©',
        'description': 'Tether –∫ –ò–Ω–¥–æ–Ω–µ–∑–∏–π—Å–∫–æ–π —Ä—É–ø–∏–∏'
    },
    'usdt_rub': {
        'name': 'USDT/RUB',
        'base': 'USDT',
        'quote': 'RUB',
        'emoji': 'üá∑üá∫',
        'description': 'Tether –∫ –†–æ—Å—Å–∏–π—Å–∫–æ–º—É —Ä—É–±–ª—é'
    },
    
    # –û–±—Ä–∞—Ç–Ω—ã–µ USDT –ø–∞—Ä—ã
    'zar_usdt': {
        'name': 'ZAR/USDT',
        'base': 'ZAR',
        'quote': 'USDT',
        'emoji': 'üáøüá¶',
        'description': '–Æ–∂–Ω–æ–∞—Ñ—Ä–∏–∫–∞–Ω—Å–∫–∏–π —Ä—ç–Ω–¥ –∫ Tether'
    },
    'thb_usdt': {
        'name': 'THB/USDT',
        'base': 'THB',
        'quote': 'USDT',
        'emoji': 'üáπüá≠',
        'description': '–¢–∞–π—Å–∫–∏–π –±–∞—Ç –∫ Tether'
    },
    'aed_usdt': {
        'name': 'AED/USDT',
        'base': 'AED',
        'quote': 'USDT',
        'emoji': 'üá¶üá™',
        'description': '–î–∏—Ä—Ö–∞–º –û–ê–≠ –∫ Tether'
    },
    'idr_usdt': {
        'name': 'IDR/USDT',
        'base': 'IDR',
        'quote': 'USDT',
        'emoji': 'üáÆüá©',
        'description': '–ò–Ω–¥–æ–Ω–µ–∑–∏–π—Å–∫–∞—è —Ä—É–ø–∏—è –∫ Tether'
    },
    'rub_usdt': {
        'name': 'RUB/USDT',
        'base': 'RUB',
        'quote': 'USDT',
        'emoji': 'üá∑üá∫',
        'description': '–†–æ—Å—Å–∏–π—Å–∫–∏–π —Ä—É–±–ª—å –∫ Tether'
    }
}


def get_currency_pair_info(pair_callback: str) -> Optional[Dict[str, Any]]:
    """
    –ü–æ–ª—É—á–µ–Ω–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –≤–∞–ª—é—Ç–Ω–æ–π –ø–∞—Ä–µ –ø–æ callback –¥–∞–Ω–Ω—ã–º
    
    Args:
        pair_callback: Callback –¥–∞–Ω–Ω—ã–µ –≤–∞–ª—é—Ç–Ω–æ–π –ø–∞—Ä—ã (–Ω–∞–ø—Ä–∏–º–µ—Ä, 'usdt_zar')
        
    Returns:
        Dict[str, Any]: –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –≤–∞–ª—é—Ç–Ω–æ–π –ø–∞—Ä–µ –∏–ª–∏ None –µ—Å–ª–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞
    """
    return CURRENCY_PAIRS.get(pair_callback)


def is_valid_currency_pair(pair_callback: str) -> bool:
    """
    –ü—Ä–æ–≤–µ—Ä–∫–∞ –≤–∞–ª–∏–¥–Ω–æ—Å—Ç–∏ –≤–∞–ª—é—Ç–Ω–æ–π –ø–∞—Ä—ã
    
    Args:
        pair_callback: Callback –¥–∞–Ω–Ω—ã–µ –≤–∞–ª—é—Ç–Ω–æ–π –ø–∞—Ä—ã
        
    Returns:
        bool: True –µ—Å–ª–∏ –ø–∞—Ä–∞ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç, False –≤ –ø—Ä–æ—Ç–∏–≤–Ω–æ–º —Å–ª—É—á–∞–µ
    """
    return pair_callback in CURRENCY_PAIRS


def get_all_currency_pairs() -> Dict[str, Dict[str, Any]]:
    """
    –ü–æ–ª—É—á–µ–Ω–∏–µ –≤—Å–µ—Ö –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –≤–∞–ª—é—Ç–Ω—ã—Ö –ø–∞—Ä
    
    Returns:
        Dict[str, Dict[str, Any]]: –°–ª–æ–≤–∞—Ä—å –≤—Å–µ—Ö –≤–∞–ª—é—Ç–Ω—ã—Ö –ø–∞—Ä
    """
    return CURRENCY_PAIRS.copy()


def get_currency_pairs_by_base(base_currency: str) -> Dict[str, Dict[str, Any]]:
    """
    –ü–æ–ª—É—á–µ–Ω–∏–µ –≤–∞–ª—é—Ç–Ω—ã—Ö –ø–∞—Ä –ø–æ –±–∞–∑–æ–≤–æ–π –≤–∞–ª—é—Ç–µ
    
    Args:
        base_currency: –ë–∞–∑–æ–≤–∞—è –≤–∞–ª—é—Ç–∞ (–Ω–∞–ø—Ä–∏–º–µ—Ä, 'USDT')
        
    Returns:
        Dict[str, Dict[str, Any]]: –°–ª–æ–≤–∞—Ä—å –≤–∞–ª—é—Ç–Ω—ã—Ö –ø–∞—Ä —Å —É–∫–∞–∑–∞–Ω–Ω–æ–π –±–∞–∑–æ–≤–æ–π –≤–∞–ª—é—Ç–æ–π
    """
    return {
        key: value for key, value in CURRENCY_PAIRS.items()
        if value['base'] == base_currency
    }


def get_currency_pairs_by_quote(quote_currency: str) -> Dict[str, Dict[str, Any]]:
    """
    –ü–æ–ª—É—á–µ–Ω–∏–µ –≤–∞–ª—é—Ç–Ω—ã—Ö –ø–∞—Ä –ø–æ –∫–æ—Ç–∏—Ä—É–µ–º–æ–π –≤–∞–ª—é—Ç–µ
    
    Args:
        quote_currency: –ö–æ—Ç–∏—Ä—É–µ–º–∞—è –≤–∞–ª—é—Ç–∞ (–Ω–∞–ø—Ä–∏–º–µ—Ä, 'RUB')
        
    Returns:
        Dict[str, Dict[str, Any]]: –°–ª–æ–≤–∞—Ä—å –≤–∞–ª—é—Ç–Ω—ã—Ö –ø–∞—Ä —Å —É–∫–∞–∑–∞–Ω–Ω–æ–π –∫–æ—Ç–∏—Ä—É–µ–º–æ–π –≤–∞–ª—é—Ç–æ–π
    """
    return {
        key: value for key, value in CURRENCY_PAIRS.items()
        if value['quote'] == quote_currency
    }