#!/usr/bin/env python3
"""
Keep Alive Service for Heroku Bot
Pings the bot every 25 minutes to prevent it from sleeping on Eco plan
"""

import time
import requests
import schedule
from datetime import datetime

# URL –≤–∞—à–µ–≥–æ –±–æ—Ç–∞
BOT_URL = "https://crypto-helper-testing-7c5ffa6d9fbf.herokuapp.com"


def ping_bot():
    """–ü–∏–Ω–≥—É–µ—Ç –±–æ—Ç —á—Ç–æ–±—ã –æ–Ω –Ω–µ —É—Å–Ω—É–ª"""
    try:
        response = requests.get(f"{BOT_URL}/health/live", timeout=10)
        if response.status_code == 200:
            status = response.json()['status']
            print(f"‚úÖ {datetime.now()}: Bot is alive - {status}")
        else:
            status_code = response.status_code
            timestamp = datetime.now()
            print(f"‚ö†Ô∏è  {timestamp}: Bot responded with status {status_code}")
    except Exception as e:
        print(f"‚ùå {datetime.now()}: Failed to ping bot: {e}")


def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è - –∑–∞–ø—É—Å–∫–∞–µ—Ç –ø–∏–Ω–≥–∏ –∫–∞–∂–¥—ã–µ 25 –º–∏–Ω—É—Ç"""
    print("üöÄ Starting Keep Alive Service for Crypto Helper Bot")
    print(f"üìç Target URL: {BOT_URL}")
    print("‚è∞ Will ping every 25 minutes to prevent sleeping")
    
    # –ó–∞–ø–ª–∞–Ω–∏—Ä–æ–≤–∞—Ç—å –ø–∏–Ω–≥ –∫–∞–∂–¥—ã–µ 25 –º–∏–Ω—É—Ç
    schedule.every(25).minutes.do(ping_bot)
    
    # –ü–µ—Ä–≤—ã–π –ø–∏–Ω–≥ —Å—Ä–∞–∑—É
    ping_bot()
    
    # –ë–µ—Å–∫–æ–Ω–µ—á–Ω—ã–π —Ü–∏–∫–ª
    while True:
        schedule.run_pending()
        time.sleep(60)  # –ü—Ä–æ–≤–µ—Ä—è—Ç—å –∫–∞–∂–¥—É—é –º–∏–Ω—É—Ç—É


if __name__ == "__main__":
    main() 