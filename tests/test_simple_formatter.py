#!/usr/bin/env python3
"""
–ü—Ä–æ—Å—Ç–æ–π —Ç–µ—Å—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Ñ—É–Ω–∫—Ü–∏–∏ format_calculation_result_simple
"""

import sys
import os
sys.path.insert(0, os.path.join(os.path.dirname(__file__), 'src'))

from decimal import Decimal
from src.handlers.calculation_logic import CalculationResult, BankingRates
from src.handlers.formatters import MessageFormatter

def test_simple_formatter():
    """–¢–µ—Å—Ç —Ñ—É–Ω–∫—Ü–∏–∏ format_calculation_result_simple"""
    
    # –î–∞–Ω–Ω—ã–µ —Ç–µ—Å—Ç–∞
    pair_info = {
        'name': 'USDT/RUB',
        'base': 'USDT', 
        'quote': 'RUB',
        'description': 'Tether –∫ –†–æ—Å—Å–∏–π—Å–∫–æ–º—É —Ä—É–±–ª—é',
        'emoji': 'üá∑üá∫'
    }
    
    amount = Decimal("1000")
    base_rate = Decimal("95.5")
    margin = Decimal("5")
    final_rate = Decimal("100.275")
    exchange_rate_data = {
        'timestamp': '2023-12-01T12:00:00',
        'source': 'rapira',
        'rate': 95.5
    }
    
    # –°–æ–∑–¥–∞–µ–º –±–∞–Ω–∫–æ–≤—Å–∫–∏–µ –∫—É—Ä—Å—ã
    banking_rates = BankingRates(
        base_rate=base_rate,
        buy_rate=Decimal("100.0"),
        sell_rate=Decimal("100.5"),
        margin_percent=margin,
        spread_percent=Decimal("0.5")
    )
    
    # –°–æ–∑–¥–∞–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç —Å –±–∞–Ω–∫–æ–≤—Å–∫–∏–º–∏ –∫—É—Ä—Å–∞–º–∏
    result = CalculationResult(
        pair_info=pair_info,
        amount=amount,
        base_rate=base_rate,
        margin=margin,
        final_rate=final_rate,
        exchange_rate_data=exchange_rate_data,
        banking_rates=banking_rates
    )
    
    # –§–æ—Ä–º–∞—Ç–∏—Ä—É–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç
    formatted_result = MessageFormatter.format_calculation_result_simple(result)
    
    print("=== –†–ï–ó–£–õ–¨–¢–ê–¢ –§–û–†–ú–ê–¢–ò–†–û–í–ê–ù–ò–Ø ===")
    print(formatted_result)
    print("=== –ö–û–ù–ï–¶ –†–ï–ó–£–õ–¨–¢–ê–¢–ê ===")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –Ω—É–∂–Ω—ã–µ —ç–ª–µ–º–µ–Ω—Ç—ã –µ—Å—Ç—å
    print("\n=== –ü–†–û–í–ï–†–ö–ò ===")
    
    print(f"‚úÖ –†–∞—Å—á–µ—Ç –∑–∞–≤–µ—Ä—à–µ–Ω: {'‚úÖ' if '–†–∞—Å—á–µ—Ç –∑–∞–≤–µ—Ä—à–µ–Ω' in formatted_result else '‚ùå'}")
    print(f"‚úÖ –ù–∞–∑–≤–∞–Ω–∏–µ –ø–∞—Ä—ã: {'‚úÖ' if 'USDT/RUB' in formatted_result else '‚ùå'}")
    print(f"‚úÖ –≠–º–æ–¥–∑–∏: {'‚úÖ' if 'üá∑üá∫' in formatted_result else '‚ùå'}")
    print(f"‚úÖ –°—É–º–º–∞: {'‚úÖ' if '1000.0000' in formatted_result else '‚ùå'}")
    print(f"‚úÖ –ö—É—Ä—Å —Å –ø—Ä–æ—Ü–µ–Ω—Ç–æ–º: {'‚úÖ' if '–ö—É—Ä—Å —Å' in formatted_result else '‚ùå'}")
    print(f"‚úÖ –ò—Ç–æ–≥–æ –∫ –ø–æ–ª—É—á–µ–Ω–∏—é: {'‚úÖ' if '–ò—Ç–æ–≥–æ –∫ –ø–æ–ª—É—á–µ–Ω–∏—é' in formatted_result else '‚ùå'}")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –ù–ï–¢ –Ω–µ–∂–µ–ª–∞—Ç–µ–ª—å–Ω—ã—Ö —ç–ª–µ–º–µ–Ω—Ç–æ–≤
    print(f"‚ùå –ë–∞–∑–æ–≤—ã–π –∫—É—Ä—Å: {'‚ùå' if '–ë–∞–∑–æ–≤—ã–π –∫—É—Ä—Å' in formatted_result else '‚úÖ'}")
    print(f"‚ùå –ë–∞–Ω–∫–æ–≤—Å–∫–∏–µ –∫—É—Ä—Å—ã: {'‚ùå' if '–ë–∞–Ω–∫–æ–≤—Å–∫–∏–µ –∫—É—Ä—Å—ã' in formatted_result else '‚úÖ'}")
    print(f"‚ùå –ü–æ–∫—É–ø–∫–∞: {'‚ùå' if '–ü–æ–∫—É–ø–∫–∞:' in formatted_result else '‚úÖ'}")
    print(f"‚ùå –ü—Ä–æ–¥–∞–∂–∞: {'‚ùå' if '–ü—Ä–æ–¥–∞–∂–∞:' in formatted_result else '‚úÖ'}")
    print(f"‚ùå –°–ª–æ–≤–æ '–Ω–∞—Ü–µ–Ω–∫–∞': {'‚ùå' if '–Ω–∞—Ü–µ–Ω–∫–∞' in formatted_result.lower() else '‚úÖ'}")
    
    print("\n=== –¢–ï–°–¢ –ó–ê–í–ï–†–®–ï–ù ===")

if __name__ == "__main__":
    test_simple_formatter()