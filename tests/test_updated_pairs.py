#!/usr/bin/env python3
"""
–¢–µ—Å—Ç–æ–≤—ã–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–Ω—ã—Ö –≤–∞–ª—é—Ç–Ω—ã—Ö –ø–∞—Ä –ø–æ—Å–ª–µ –∏–∑–º–µ–Ω–µ–Ω–∏–π
"""

import asyncio
import sys
import os

# –î–æ–±–∞–≤–ª—è–µ–º –ø—É—Ç—å –¥–ª—è –∏–º–ø–æ—Ä—Ç–∞ –º–æ–¥—É–ª–µ–π –ø—Ä–æ–µ–∫—Ç–∞
sys.path.insert(0, os.path.join(os.path.dirname(__file__), 'src'))

try:
    from services.api_service import APIService
    from handlers.currency_pairs import CURRENCY_PAIRS, get_all_currency_pairs
    from config import config
    from utils.logger import get_api_logger
except ImportError as e:
    print(f"‚ùå –û—à–∏–±–∫–∞ –∏–º–ø–æ—Ä—Ç–∞: {e}")
    sys.exit(1)

logger = get_api_logger()


async def test_updated_pairs():
    """–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –æ–±–Ω–æ–≤–ª–µ–Ω–Ω—ã—Ö –≤–∞–ª—é—Ç–Ω—ã—Ö –ø–∞—Ä"""
    print("=" * 60)
    print("üöÄ –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï –û–ë–ù–û–í–õ–ï–ù–ù–´–• –í–ê–õ–Æ–¢–ù–´–• –ü–ê–†")
    print("=" * 60)
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–æ–≤—ã–µ –≤–∞–ª—é—Ç–Ω—ã–µ –ø–∞—Ä—ã –∏–∑ handlers
    print("\nüìã –ù–æ–≤—ã–µ –≤–∞–ª—é—Ç–Ω—ã–µ –ø–∞—Ä—ã –∏–∑ handlers/currency_pairs.py:")
    pairs = get_all_currency_pairs()
    for key, pair_info in pairs.items():
        print(f"  {key}: {pair_info['name']} {pair_info['emoji']} - {pair_info['description']}")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é
    print(f"\nüìã –ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ–º—ã–µ –ø–∞—Ä—ã –≤ config.py ({len(config.SUPPORTED_PAIRS)}):")
    for i, pair in enumerate(config.SUPPORTED_PAIRS, 1):
        print(f"  {i:2d}. {pair}")
    
    # –¢–µ—Å—Ç–∏—Ä—É–µ–º API —Å–µ—Ä–≤–∏—Å
    print("\nüîç –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ API —Å–µ—Ä–≤–∏—Å–∞...")
    
    async with APIService() as api:
        # –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ –∫—É—Ä—Å—ã –æ—Ç Rapira
        all_rates = await api.get_all_rates()
        
        if not all_rates:
            print("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –∫—É—Ä—Å—ã –æ—Ç Rapira API")
            return
        
        print(f"‚úÖ –ü–æ–ª—É—á–µ–Ω–æ {len(all_rates)} –∫—É—Ä—Å–æ–≤ –æ—Ç Rapira API")
        
        # –¢–µ—Å—Ç–∏—Ä—É–µ–º –∫–∞–∂–¥—É—é –ø–∞—Ä—É –∏–∑ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
        print("\nüß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∫–∞–∂–¥–æ–π –ø–∞—Ä—ã:")
        
        for pair in config.SUPPORTED_PAIRS:
            try:
                rate = await api.get_exchange_rate(pair)
                if rate:
                    if rate.rate > 1:
                        print(f"  ‚úÖ {pair}: {rate.rate:.2f} (–∏—Å—Ç–æ—á–Ω–∏–∫: {rate.source})")
                    else:
                        print(f"  ‚úÖ {pair}: {rate.rate:.8f} (–∏—Å—Ç–æ—á–Ω–∏–∫: {rate.source})")
                else:
                    print(f"  ‚ùå {pair}: –∫—É—Ä—Å –Ω–µ –Ω–∞–π–¥–µ–Ω")
            except Exception as e:
                print(f"  ‚ùå {pair}: –æ—à–∏–±–∫–∞ - {e}")
    
    print("\n‚úÖ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ!")


if __name__ == "__main__":
    asyncio.run(test_updated_pairs())