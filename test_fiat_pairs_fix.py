#!/usr/bin/env python3
"""
–¢–µ—Å—Ç –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Ñ–∏–∞—Ç–Ω—ã—Ö –≤–∞–ª—é—Ç–Ω—ã—Ö –ø–∞—Ä
–ü—Ä–æ–≤–µ—Ä—è–µ—Ç —Ä–∞–±–æ—Ç—É fallback –º–µ—Ö–∞–Ω–∏–∑–º–∞ –¥–ª—è –ø—Ä–æ–±–ª–µ–º–Ω—ã—Ö –ø–∞—Ä
"""

import asyncio
import sys
import os

# –î–æ–±–∞–≤–ª—è–µ–º –ø—É—Ç—å –∫ src –¥–ª—è –∏–º–ø–æ—Ä—Ç–∞ –º–æ–¥—É–ª–µ–π
sys.path.insert(0, os.path.join(os.path.dirname(__file__), 'src'))

from services.api_service import api_service
from services.fiat_rates_service import fiat_rates_service
from utils.logger import get_api_logger

logger = get_api_logger()

# –ü—Ä–æ–±–ª–µ–º–Ω—ã–µ –ø–∞—Ä—ã –∏–∑ –ª–æ–≥–æ–≤
PROBLEMATIC_PAIRS = [
    'RUB/THB', 'THB/RUB',
    'RUB/AED', 'AED/RUB', 
    'RUB/IDR', 'IDR/RUB',
    'RUB/EUR', 'EUR/RUB',
    'RUB/USD', 'USD/RUB'
]

async def test_fiat_service_fallback():
    """–¢–µ—Å—Ç–∏—Ä—É–µ–º fallback –º–µ—Ö–∞–Ω–∏–∑–º –≤ fiat_rates_service"""
    print("üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ fallback –º–µ—Ö–∞–Ω–∏–∑–º–∞ fiat_rates_service...")
    
    async with fiat_rates_service:
        for pair in PROBLEMATIC_PAIRS:
            try:
                print(f"\nüìä –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø–∞—Ä—ã: {pair}")
                
                # –†–∞–∑–±–∏—Ä–∞–µ–º –ø–∞—Ä—É
                from_currency, to_currency = pair.split('/')
                
                # –¢–µ—Å—Ç–∏—Ä—É–µ–º –ø–æ–ª—É—á–µ–Ω–∏–µ –∫—É—Ä—Å–∞ —Å fallback
                rate = await fiat_rates_service.get_fiat_rate(from_currency, to_currency, use_fallback=True)
                
                if rate:
                    print(f"‚úÖ {pair}: {rate:.6f}")
                    
                    # –¢–µ—Å—Ç–∏—Ä—É–µ–º —Å–æ–∑–¥–∞–Ω–∏–µ ExchangeRate –æ–±—ä–µ–∫—Ç–∞
                    exchange_rate = await fiat_rates_service.get_fiat_exchange_rate(pair)
                    if exchange_rate:
                        print(f"   üìà ExchangeRate: {exchange_rate.rate:.6f} (source: {exchange_rate.source})")
                    else:
                        print(f"‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ–∑–¥–∞—Ç—å ExchangeRate –¥–ª—è {pair}")
                else:
                    print(f"‚ùå {pair}: –ö—É—Ä—Å –Ω–µ –Ω–∞–π–¥–µ–Ω")
                    
            except Exception as e:
                print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏ {pair}: {e}")

async def test_api_service_integration():
    """–¢–µ—Å—Ç–∏—Ä—É–µ–º –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏—é —Å api_service"""
    print("\nüîó –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏ —Å api_service...")
    
    async with api_service:
        for pair in PROBLEMATIC_PAIRS:
            try:
                print(f"\nüìä API —Ç–µ—Å—Ç –¥–ª—è –ø–∞—Ä—ã: {pair}")
                
                # –¢–µ—Å—Ç–∏—Ä—É–µ–º –ø–æ–ª—É—á–µ–Ω–∏–µ –∫—É—Ä—Å–∞ —á–µ—Ä–µ–∑ api_service
                exchange_rate = await api_service.get_exchange_rate(pair)
                
                if exchange_rate:
                    print(f"‚úÖ {pair}: {exchange_rate.rate:.6f} (source: {exchange_rate.source})")
                else:
                    print(f"‚ùå {pair}: –ö—É—Ä—Å –Ω–µ –Ω–∞–π–¥–µ–Ω —á–µ—Ä–µ–∑ API service")
                    
            except Exception as e:
                print(f"‚ùå –û—à–∏–±–∫–∞ API service –¥–ª—è {pair}: {e}")

async def test_fallback_rates_coverage():
    """–¢–µ—Å—Ç–∏—Ä—É–µ–º –ø–æ–∫—Ä—ã—Ç–∏–µ fallback –∫—É—Ä—Å–æ–≤"""
    print("\nüìã –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø–æ–∫—Ä—ã—Ç–∏—è fallback –∫—É—Ä—Å–æ–≤...")
    
    async with fiat_rates_service:
        # –¢–µ—Å—Ç–∏—Ä—É–µ–º –æ—Å–Ω–æ–≤–Ω—ã–µ –≤–∞–ª—é—Ç—ã
        base_currencies = ['USD', 'EUR', 'RUB', 'ZAR', 'THB', 'AED', 'IDR']
        
        for base_currency in base_currencies:
            print(f"\nüí± Fallback –∫—É—Ä—Å—ã –¥–ª—è {base_currency}:")
            
            fallback_rates = await fiat_rates_service._get_fallback_rates(base_currency)
            
            if fallback_rates:
                for target_currency, rate in fallback_rates.items():
                    print(f"   {base_currency}/{target_currency}: {rate:.6f}")
            else:
                print(f"   ‚ùå –ù–µ—Ç fallback –∫—É—Ä—Å–æ–≤ –¥–ª—è {base_currency}")

async def test_cache_functionality():
    """–¢–µ—Å—Ç–∏—Ä—É–µ–º —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç—å –∫—ç—à–∞"""
    print("\nüóÑÔ∏è –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∫—ç—à–∞...")
    
    async with fiat_rates_service:
        # –û—á–∏—â–∞–µ–º –∫—ç—à
        if hasattr(fiat_rates_service, '_cache'):
            fiat_rates_service._cache.clear()
        
        print("üìù –¢–µ—Å—Ç–∏—Ä—É–µ–º –∫—ç—à–∏—Ä–æ–≤–∞–Ω–∏–µ USD –∫—É—Ä—Å–æ–≤...")
        
        # –ü–µ—Ä–≤—ã–π –∑–∞–ø—Ä–æ—Å - –¥–æ–ª–∂–µ–Ω –ø–æ–ø–∞—Å—Ç—å –≤ fallback –∏ –∑–∞–∫—ç—à–∏—Ä–æ–≤–∞—Ç—å—Å—è
        rates1 = await fiat_rates_service._get_fallback_rates('USD')
        await fiat_rates_service._cache_rates('USD', rates1)
        
        # –í—Ç–æ—Ä–æ–π –∑–∞–ø—Ä–æ—Å - –¥–æ–ª–∂–µ–Ω –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –∫—ç—à
        cached_rates = await fiat_rates_service._get_cached_rates('USD')
        
        if cached_rates:
            print("‚úÖ –ö—ç—à —Ä–∞–±–æ—Ç–∞–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ")
            print(f"   –ó–∞–∫—ç—à–∏—Ä–æ–≤–∞–Ω–æ –∫—É—Ä—Å–æ–≤: {len(cached_rates)}")
        else:
            print("‚ùå –ö—ç—à –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç")

async def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è"""
    print("üöÄ –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–æ–≤ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Ñ–∏–∞—Ç–Ω—ã—Ö –ø–∞—Ä...\n")
    
    try:
        # –¢–µ—Å—Ç 1: Fallback –º–µ—Ö–∞–Ω–∏–∑–º
        await test_fiat_service_fallback()
        
        # –¢–µ—Å—Ç 2: –ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è —Å API service
        await test_api_service_integration()
        
        # –¢–µ—Å—Ç 3: –ü–æ–∫—Ä—ã—Ç–∏–µ fallback –∫—É—Ä—Å–æ–≤
        await test_fallback_rates_coverage()
        
        # –¢–µ—Å—Ç 4: –ö—ç—à
        await test_cache_functionality()
        
        print("\nüéâ –í—Å–µ —Ç–µ—Å—Ç—ã –∑–∞–≤–µ—Ä—à–µ–Ω—ã!")
        
    except Exception as e:
        print(f"\nüí• –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞: {e}")
        import traceback
        traceback.print_exc()

if __name__ == "__main__":
    asyncio.run(main())