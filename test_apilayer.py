#!/usr/bin/env python3
"""
–¢–µ—Å—Ç–æ–≤—ã–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏ APILayer
"""

import asyncio
import sys
import os

# –î–æ–±–∞–≤–ª—è–µ–º src –≤ path
sys.path.insert(0, os.path.join(os.path.dirname(__file__), 'src'))

from services.fiat_rates_service import fiat_rates_service
from config import config


async def test_apilayer_integration():
    """–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏ APILayer"""
    
    print("üîç –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏ APILayer...")
    print(f"API Key: {config.API_LAYER_KEY[:10]}...")
    print(f"API URL: {config.API_LAYER_URL}")
    print("-" * 50)
    
    try:
        # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º —Å–µ—Ä–≤–∏—Å
        async with fiat_rates_service as service:
            
            # 1. Health check
            print("1. –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–¥–æ—Ä–æ–≤—å—è APILayer...")
            health = await service.health_check()
            print(f"   Status: {health['status']}")
            print(f"   Response time: {health.get('response_time_ms', 'N/A')}ms")
            if health['status'] != 'healthy':
                print(f"   Error: {health.get('message', 'Unknown error')}")
                return False
            
            # 2. –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –±–∞–∑–æ–≤—ã—Ö –∫—É—Ä—Å–æ–≤
            print("\n2. –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –±–∞–∑–æ–≤—ã—Ö –∫—É—Ä—Å–æ–≤...")
            test_pairs = [
                ('USD', 'RUB'),
                ('USD', 'ZAR'),
                ('USD', 'THB'),
                ('USD', 'AED'),
                ('USD', 'IDR'),
                ('RUB', 'ZAR'),
                ('USDT', 'RUB')  # –≠—Ç–æ –¥–æ–ª–∂–Ω–æ –Ω–µ —Ä–∞–±–æ—Ç–∞—Ç—å, —Ç–∞–∫ –∫–∞–∫ USDT –Ω–µ —Ñ–∏–∞—Ç–Ω–∞—è –≤–∞–ª—é—Ç–∞
            ]
            
            for from_curr, to_curr in test_pairs:
                rate = await service.get_fiat_rate(from_curr, to_curr)
                if rate is not None:
                    print(f"   ‚úÖ {from_curr}/{to_curr}: {rate:.6f}")
                else:
                    print(f"   ‚ùå {from_curr}/{to_curr}: –Ω–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –∫—É—Ä—Å")
            
            # 3. –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ ExchangeRate –æ–±—ä–µ–∫—Ç–æ–≤
            print("\n3. –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ ExchangeRate –æ–±—ä–µ–∫—Ç–æ–≤...")
            exchange_rate = await service.get_fiat_exchange_rate('USD/RUB')
            if exchange_rate:
                print(f"   ‚úÖ USD/RUB ExchangeRate:")
                print(f"      Pair: {exchange_rate.pair}")
                print(f"      Rate: {exchange_rate.rate}")
                print(f"      Source: {exchange_rate.source}")
                print(f"      Timestamp: {exchange_rate.timestamp}")
            else:
                print(f"   ‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ–∑–¥–∞—Ç—å ExchangeRate –¥–ª—è USD/RUB")
            
            print("\n‚úÖ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ —É—Å–ø–µ—à–Ω–æ!")
            return True
            
    except Exception as e:
        print(f"\n‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏: {e}")
        import traceback
        traceback.print_exc()
        return False


if __name__ == "__main__":
    success = asyncio.run(test_apilayer_integration())
    sys.exit(0 if success else 1)