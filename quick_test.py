#!/usr/bin/env python3
"""
–ë—ã—Å—Ç—Ä—ã–π —Ç–µ—Å—Ç –æ—Å–Ω–æ–≤–Ω—ã—Ö —Ñ—É–Ω–∫—Ü–∏–π –ø–æ—Å–ª–µ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–π
"""

import asyncio
import sys
import os
from decimal import Decimal

# –î–æ–±–∞–≤–ª—è–µ–º –ø—É—Ç—å –∫ src –¥–ª—è –∏–º–ø–æ—Ä—Ç–∞ –º–æ–¥—É–ª–µ–π
sys.path.insert(0, os.path.join(os.path.dirname(__file__), 'src'))

from services.api_service import api_service
from handlers.currency_pairs import get_currency_pair_info
from handlers.calculation_logic import calculate_margin_rate

async def quick_test():
    """–ë—ã—Å—Ç—Ä—ã–π —Ç–µ—Å—Ç –æ—Å–Ω–æ–≤–Ω—ã—Ö —Ñ—É–Ω–∫—Ü–∏–π"""
    print("üöÄ –ë—ã—Å—Ç—Ä—ã–π —Ç–µ—Å—Ç –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–π...")
    
    # –¢–µ—Å—Ç–∏—Ä—É–µ–º –æ–¥–Ω—É –ø—Ä–æ–±–ª–µ–º–Ω—É—é –ø–∞—Ä—É
    test_pair = 'rubthb'
    
    try:
        # –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–∞—Ä–µ
        pair_info = get_currency_pair_info(test_pair)
        print(f"‚úÖ –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø–∞—Ä–µ: {pair_info['name']}")
        
        # –§–æ—Ä–º–∏—Ä—É–µ–º –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç
        pair_format = f"{pair_info['base']}/{pair_info['quote']}"
        print(f"‚úÖ –§–æ—Ä–º–∞—Ç –¥–ª—è API: {pair_format}")
        
        # –ü–æ–ª—É—á–∞–µ–º –∫—É—Ä—Å
        async with api_service:
            exchange_rate = await api_service.get_exchange_rate(pair_format)
            
            if exchange_rate:
                print(f"‚úÖ –ö—É—Ä—Å –ø–æ–ª—É—á–µ–Ω: {exchange_rate.rate:.6f} ({exchange_rate.source})")
                
                # –¢–µ—Å—Ç–∏—Ä—É–µ–º —Ä–∞—Å—á–µ—Ç
                result = calculate_margin_rate(
                    pair_info=pair_info,
                    amount=Decimal('100'),
                    margin=Decimal('5'),
                    exchange_rate_data=exchange_rate.to_dict()
                )
                
                print(f"‚úÖ –†–∞—Å—á–µ—Ç: 100 {pair_info['base']} = {result.amount_final_rate:.2f} {pair_info['quote']}")
                print("üéâ –í—Å–µ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Ä–∞–±–æ—Ç–∞—é—Ç!")
                
            else:
                print("‚ùå –ö—É—Ä—Å –Ω–µ –ø–æ–ª—É—á–µ–Ω")
                
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")

if __name__ == "__main__":
    asyncio.run(quick_test())